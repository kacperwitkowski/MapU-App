{"version":3,"sources":["components/scroll/scroll.js","components/dashboard/dashboard.js","components/register/register.js","components/login/login.js","components/redux/reduxIndex.js","components/vectorMap/vectormap.js","components/videoPlayer/videoPlayer.js","components/settings/settings.js","components/profile/profile.js","components/info/drive.gif","components/info/info.js","components/quiz/timer.js","components/quiz/quiz.js","components/countriesInfo/countriesInfo.js","components/roadInformations/roadInformations.js","App.js","components/redux/store.js","components/resetPassword/logo.png","components/resetPassword/resetPassword.js","index.js"],"names":["Scroll","isVisible","setIsVisible","useState","toogleVisibility","window","pageYOffset","useEffect","addEventListener","removeEventListener","className","type","onClick","scrollTo","top","behavior","Dashboard","setIsActive","roads","setRoads","sortType","setSortType","sortCurr","setSortCurr","showMiles","setShowMiles","currency","setCurrency","currentCurr","setCurrentCurr","currentCurrName","setCurrentCurrName","newTitle","setNewTitle","pageNumber","setPageNumber","pageTotal","setPageTotal","showEdit","setShowEdit","async","getCurr","axios","get","CAD","GBP","CNY","EUR","JPY","AUD","data","name","value","currencyRequest","res","headers","Authorization","localStorage","getItem","totalPages","err","getData","types","gasoline","kms","gasoline2","kms2","fullPrice","fullPrice2","sortProperty","sorted","sort","a","b","slice","sortAscending","USD","findCurrencyName","find","el","currencyCalc","title","Math","max","onChange","e","target","disabled","selected","kmphTOmph","defaultValue","min","length","map","src","img1","alt","img2","style","fontSize","cursor","closest","nextSibling","display","required","placeholder","maxLength","id","preventDefault","fetch","method","body","JSON","stringify","_id","editDiv","childNodes","updateData","countries","toFixed","margin","createdAt","newData2","filter","el2","setTimeout","delete","postID","deleteRoad","Register","setShowRegister","username","setUsername","password","setPassword","password2","setPassword2","email","setEmail","failure","setFailure","success","setSuccess","isClicked","setIsClicked","image","setImage","url","setUrl","uploadFields","test","console","log","passwordConfirm","pic","then","ok","status","catch","postData","FormData","append","json","result","uploadPic","files","color","textAlign","Login","setShowLogin","setCurrentUser","emailVisible","setEmailVisible","emailChangeValue","setEmailChangeValue","message","setMessage","onSubmit","user","post","setItem","token","handleSumbit","response","sumbitEmail","counterSlice","createSlice","initialState","destination","origin","gasolineSummary","gasolineO","gasolineD","roadInfo","visitedCountries","items1","items2","distance","reducers","setDestinationCor","state","action","payload","setOriginCor","setAvrTwoPrices","setGasolineO","setGasolineD","setDistance","setRoadInfos","setCountriesOnVecMap","setItems1","setItems2","setGasolinePrice","actions","VectorMapFn","stateName","setStateName","countryCode","setCountryCode","ID","setID","clickedOne","setClickedOne","isloaded","setIsloaded","isMoreThenOne","setIsMoreThenOne","dispatch","useDispatch","countriesList","forEach","document","querySelector","fill","World","onLocationClick","event","countryName","getAttribute","countryID","indexOf","findEl","findEl2","VideoPlayer","videoEl","playing","setPlaying","progress","setProgress","speed","setSpeed","muted","setMuted","playerState","current","play","pause","handleOnTimeUpdate","currentTime","duration","togglePlay","handleVideoProgress","manualChange","Number","handleVideoSpeed","playbackRate","toggleMute","Settings","lstorage","isTrue1","setIsTrue1","isTrue2","setIsTrue2","currentPassword","setCurrentPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","emailMessage","setEmailMessage","passwordMessage","setPasswordMessage","currentUser","emailValidation","confirm","removeItem","location","reload","dataFromLS","parse","score","updateUserInfo","passwordCurrent","changeUserPassword","href","rel","Profile","settingsVisible","setSettingsVisible","countriesListVisible","setCountriesListVisible","setUser","useRef","useSelector","directions","photoRender","minHeight","maxHeight","updatePhoto","file","ref","onTimeUpdate","borderColor","i","isActive","Info","driveGif","Timer","setStop","qNumber","timer","setTimer","interval","setInterval","prev","clearInterval","Quiz","showScore","setShowScore","showIntro","setShowIntro","setScore","questions","setQuestions","incQuestion","setIncQuestion","currentQNumber","setCurrentQNumber","floor","random","finalScore","splice","handleResetButton","justifyContent","question","answers","ans","isCorrect","answerText","CountriesInfo","roadDetails","items","img","capitol","gasolinePrice","population","attractions","att","isoAlpha3","RoadInformations","isGasolineVisible","setIsGasolineVisible","showSavePopup","setShowSavePopup","isPopupVisible","setPopupVisible","gasolineData","setGasolineData","setTitle","liters","setLiters","calcFullPrice","setCalcFullPrice","setStatus","miles","setMiles","setGasoline","setGasolineSummary","setImg1","setImg2","Date","isCancelled","gasolinePriceSummary","gasolineFullPrice","calcMiles","milesConverter","step","getDate","getMonth","getFullYear","fullPriceOfGas","newRoad","road","sumbitData","styles","width","height","position","zIndex","overflow","MapboxGLMap","setMap","require","dashboardVisible","setDashboardVisible","profileVisible","setProfileVisible","quizVisible","setQuizVisible","showRegister","showLogin","showInfo","setShowInfo","mapContainer","mapboxgl","accessToken","process","getGasolineData","Map","container","center","zoom","noWrap","MapboxDirections","unit","profile","on","originCoords","feature","geometry","coordinates","longitude","latitude","cordsIso3","iso1A3Code","item","respond","Object","assign","longitude2","latitude2","route","objAssign","resize","nav","NavigationControl","addControl","initializeMap","store","configureStore","reducer","indexReducer","ResetPassword","navigate","useNavigate","setPasswordConfirm","class","logo","pathname","userPassword","patch","ReactDOM","render","StrictMode","path","element","getElementById"],"mappings":"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","file":"static/js/main.085c9374.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./scroll.css\";\r\n\r\nconst Scroll = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const toogleVisibility = () => {\r\n    if (window.pageYOffset > 300) setIsVisible(true);\r\n    else setIsVisible(false);\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", toogleVisibility);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toogleVisibility);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"scroll\">\r\n      <button\r\n        type=\"button\"\r\n        className={isVisible ? \"scroll__visible\" : \"scroll__notVisible\"}\r\n        onClick={scrollToTop}\r\n      >\r\n        <span>☝️</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import \"./dashboard.scss\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ImBin2 } from \"react-icons/im\";\r\nimport {\r\n  AiOutlineClose,\r\n  AiOutlineEdit,\r\n  AiOutlineArrowRight,\r\n  AiOutlineArrowLeft,\r\n} from \"react-icons/ai\";\r\nimport Scroll from \"../scroll/scroll\";\r\n\r\nconst Dashboard = ({ setIsActive }) => {\r\n  const [roads, setRoads] = useState([]);\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortCurr, setSortCurr] = useState(\"\");\r\n  const [showMiles, setShowMiles] = useState(false);\r\n  const [currency, setCurrency] = useState([]);\r\n  const [currentCurr, setCurrentCurr] = useState(\"\");\r\n  const [currentCurrName, setCurrentCurrName] = useState(\"\");\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageTotal, setPageTotal] = useState(0);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n\r\n  const updateData = (e, id) => {\r\n    e.preventDefault();\r\n\r\n    fetch(`/updateTour/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        _id: id,\r\n        title: newTitle,\r\n      }),\r\n    });\r\n    const editDiv = e.target.closest(\"form\");\r\n    editDiv.style.display = \"none\";\r\n    editDiv.childNodes[0].value = \"\";\r\n    setNewTitle(\"\");\r\n    setShowEdit(!showEdit);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currencyRequest = async () => {\r\n      const getCurr = await axios.get(\r\n        \"https://api.currencyapi.com/v3/latest?apikey=xHykqZcG5R2sZNin76xpuCoJVIstzx8tS1JXR1c8\"\r\n      );\r\n      const { CAD, GBP, CNY, EUR, JPY, AUD } = getCurr.data.data;\r\n      setCurrency([\r\n        { name: \"CAD\", value: CAD.value },\r\n        { name: \"CNY\", value: CNY.value },\r\n        { name: \"GBP\", value: GBP.value },\r\n        { name: \"EUR\", value: EUR.value },\r\n        { name: \"JPY\", value: JPY.value },\r\n        { name: \"AUD\", value: AUD.value },\r\n        { name: \"USD\", value: 1 },\r\n      ]);\r\n    };\r\n    currencyRequest();\r\n  }, []);\r\n\r\n  const goToPrevious = () => {\r\n    setPageNumber(Math.max(0, pageNumber - 1));\r\n  };\r\n  const goToNext = () => {\r\n    setPageNumber(Math.min(pageTotal - 1, pageNumber + 1));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const res = await axios.get(`/myroads?page=${pageNumber}`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n          },\r\n        });\r\n        setRoads(res.data.roads);\r\n        setPageTotal(res.data.totalPages);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getData();\r\n  }, [pageNumber, showEdit]);\r\n\r\n  useEffect(() => {\r\n    const sortAscending = (type) => {\r\n      const types = {\r\n        gasoline: \"gasoline\",\r\n        kms: \"kms\",\r\n        gasoline2: \"gasoline2\",\r\n        kms2: \"kms2\",\r\n        fullPrice: \"fullPrice\",\r\n        fullPrice2: \"fullPrice2\",\r\n      };\r\n      const sortProperty = types[type];\r\n\r\n      if (\r\n        sortProperty === types.kms ||\r\n        sortProperty === types.gasoline ||\r\n        sortProperty === types.fullPrice\r\n      ) {\r\n        const sorted = [...roads].sort(\r\n          (a, b) => b[sortProperty] - a[sortProperty]\r\n        );\r\n        setRoads(sorted);\r\n      } else {\r\n        const sorted = [...roads].sort(\r\n          (a, b) => a[sortProperty.slice(0, -1)] - b[sortProperty.slice(0, -1)]\r\n        );\r\n        setRoads(sorted);\r\n      }\r\n    };\r\n\r\n    sortAscending(sortType);\r\n  }, [sortType]);\r\n\r\n  const deleteRoad = async (postID) => {\r\n    try {\r\n      await axios.delete(`/deleteroad/${postID}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const kmphTOmph = (type) => {\r\n    if (type === \"miles\") setShowMiles(true);\r\n    else setShowMiles(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currencyCalc = (type) => {\r\n      const types = {\r\n        USD: \"USD\",\r\n        EUR: \"EUR\",\r\n        GBP: \"GBP\",\r\n        CAD: \"CAD\",\r\n        CNY: \"CNY\",\r\n        JPY: \"JPY\",\r\n        AUD: \"AUD\",\r\n      };\r\n      const sortProperty = types[type];\r\n\r\n      const findCurrencyName = currency.find((el) => el.name === sortProperty);\r\n      setCurrentCurr(findCurrencyName?.value);\r\n      setCurrentCurrName(findCurrencyName?.name);\r\n    };\r\n\r\n    currencyCalc(sortCurr);\r\n  }, [sortCurr]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <button\r\n        title=\"Close\"\r\n        className=\"dashboard__close\"\r\n        onClick={() => setIsActive(false)}\r\n      >\r\n        <AiOutlineClose />\r\n      </button>\r\n      <div className=\"dashboard__options\">\r\n        <button title=\"Previous Page\" onClick={() => goToPrevious()}>\r\n          {<AiOutlineArrowLeft />}\r\n        </button>\r\n        <select onChange={(e) => setSortType(e.target.value)}>\r\n          <option disabled selected>\r\n            {\" \"}\r\n            -- select an option --{\" \"}\r\n          </option>\r\n          <option value=\"gasoline2\">Lowest Liters Cons</option>\r\n          <option value=\"gasoline\">Highest Liters Cons</option>\r\n          <option value=\"kms2\">Shortest Road</option>\r\n          <option value=\"kms\">Longest Road</option>\r\n          <option value=\"fullPrice2\">Cheapest Roads</option>\r\n          <option value=\"fullPrice\">Expensive Roads</option>\r\n        </select>\r\n        <select onChange={(e) => kmphTOmph(e.target.value)}>\r\n          <option defaultValue value=\"kms\">\r\n            Kilometers\r\n          </option>\r\n          <option value=\"miles\">Miles</option>\r\n        </select>\r\n        <select onChange={(e) => setSortCurr(e.target.value)}>\r\n          <option defaultValue value=\"USD\">\r\n            USD\r\n          </option>\r\n          <option value=\"EUR\">EUR</option>\r\n          <option value=\"GBP\">GBP</option>\r\n          <option value=\"CAD\">CAD</option>\r\n          <option value=\"AUD\">AUD</option>\r\n          <option value=\"JPY\">JPY</option>\r\n          <option value=\"CNY\">CNY</option>\r\n        </select>\r\n        <button title=\"Next Page\" onClick={() => goToNext()}>\r\n          {<AiOutlineArrowRight />}\r\n        </button>\r\n      </div>\r\n      <div className=\"dashboard__roadsContainer\">\r\n        {roads.length !== 0 ? (\r\n          roads.map((el) => (\r\n            <div key={el._id} className=\"dashboard__road\">\r\n              <div className=\"dashboard__road--imgDiv\">\r\n                <img\r\n                  className=\"dashboard__road--img\"\r\n                  src={el.img1}\r\n                  alt=\"flag\"\r\n                />\r\n                <img\r\n                  className=\"dashboard__road--img\"\r\n                  src={el.img2 ? el.img2 : \"\"}\r\n                  alt=\"flag\"\r\n                />\r\n              </div>\r\n              <div className=\"dashboard__road--title\">\r\n                <p>{el.title}</p>\r\n                <AiOutlineEdit\r\n                  title=\"Edit\"\r\n                  style={{ fontSize: \"20px\", cursor: \"pointer\" }}\r\n                  onClick={(e) => {\r\n                    const editDiv = e.target.closest(\"div\").nextSibling;\r\n                    editDiv.style.display = \"block\";\r\n                  }}\r\n                />\r\n              </div>\r\n              <form className=\"dashboard__road--editTitleForm\">\r\n                <input\r\n                  required\r\n                  placeholder=\"Enter a title (min.3)\"\r\n                  min={3}\r\n                  maxLength={25}\r\n                  onChange={(e) => setNewTitle(e.target.value)}\r\n                />\r\n                <button\r\n                  disabled={newTitle.length <= 2 ? true : false}\r\n                  onClick={(e) => updateData(e, el._id)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </form>\r\n              <p>\r\n                {el.countries.length === 2\r\n                  ? `${el.countries[0]} - ${el.countries[1]}`\r\n                  : el.countries[0]}\r\n              </p>\r\n              <p>\r\n                It's{\" \"}\r\n                {showMiles\r\n                  ? `${((el.kms / 1000) * 0.6214).toFixed(1)}mi `\r\n                  : `${(el.kms / 1000).toFixed(1)}km `}\r\n                long\r\n              </p>\r\n              <p>\r\n                Average fuel consumption was{\" \"}\r\n                {showMiles\r\n                  ? `${el.gasoline}L per 100mi`\r\n                  : `${el.gasoline}L per 100km`}{\" \"}\r\n              </p>\r\n              <p>\r\n                Average route price{\" \"}\r\n                {showMiles\r\n                  ? currentCurr\r\n                    ? (el.fullPrice * 0.621371192 * currentCurr).toFixed(1)\r\n                    : (el.fullPrice * 0.621371192).toFixed(1)\r\n                  : currentCurr\r\n                  ? (el.fullPrice * currentCurr).toFixed(1)\r\n                  : el.fullPrice}\r\n                {currentCurrName ? currentCurrName : \"USD\"}\r\n              </p>\r\n              <div className=\"dashboard__road--details\">\r\n                <p style={{ margin: \"0px\" }}>\r\n                  Created at {el.createdAt.slice(0, 10)}\r\n                </p>\r\n                <button\r\n                  title=\"Delete\"\r\n                  className=\"dashboard__road--delete\"\r\n                  onClick={() => {\r\n                    const newData2 = roads.filter((el2) => {\r\n                      return el2._id !== el._id;\r\n                    });\r\n                    setRoads(newData2);\r\n                    setTimeout(() => {\r\n                      deleteRoad(el._id);\r\n                    }, 1000);\r\n                  }}\r\n                >\r\n                  <ImBin2 />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p style={{ fontSize: \"48px\" }} className=\"dashboard__road--text\">\r\n            There is empty\r\n          </p>\r\n        )}\r\n      </div>\r\n      <Scroll />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import \"./register.scss\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\r\n\r\nconst Register = ({ setShowRegister }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [failure, setFailure] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const uploadPic = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"mapU-app\");\r\n    data.append(\"cloud_name\", \"dx7vsnkjj\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/dx7vsnkjj/image/upload\", {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setUrl(result.url);\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      uploadFields();\r\n    }\r\n  }, [url]);\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      console.log(\"invalid email\");\r\n    }\r\n\r\n    fetch(\"/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        passwordConfirm: password2,\r\n        email,\r\n        pic: url\r\n          ? url\r\n          : \"https://res.cloudinary.com/dx7vsnkjj/image/upload/v1641343261/dobry_klbahr.png\",\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setSuccess(true);\r\n          setFailure(\"\");\r\n          setIsClicked(false);\r\n        } else {\r\n          setIsClicked(true);\r\n          setFailure(res.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    if (image) {\r\n      uploadPic();\r\n    } else {\r\n      uploadFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register__content\">\r\n        <button\r\n          onClick={() => setShowRegister(false)}\r\n          className=\"register__close\"\r\n          title=\"Close\"\r\n        >\r\n          &times;\r\n        </button>\r\n        <div className=\"register__content--logo\">\r\n          <img src=\"./logo.png\" alt=\"logo\" />\r\n        </div>\r\n        <form className=\"register__content--formSumbit\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            required\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Repeat password\"\r\n            value={password2}\r\n            onChange={(e) => setPassword2(e.target.value)}\r\n          />\r\n          <label className=\"custom-file-upload\">\r\n            <AiOutlineCloudUpload />\r\n            <i>Upload photo</i>\r\n            <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n          </label>\r\n\r\n\r\n\r\n          <button\r\n            onClick={(e) => postData(e)}\r\n            className=\"register__content--button\"\r\n          >\r\n            Register\r\n          </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n        {failure === 500 ? (\r\n          <span style={{ color: \"red\", textAlign: \"center\" }}>\r\n            You entered the wrong value or the user with this email/username\r\n            already exists!\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {isClicked ? (\r\n          !email || !password || !password2 || !username ? (\r\n            <span style={{ color: \"red\" }}>Please fill in all fields!</span>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {success ? (\r\n          <span style={{ color: \"green\" }}>Saved successfully!</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import \"./login.scss\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = ({ setShowLogin, setCurrentUser }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [failure, setFailure] = useState(false);\r\n  const [emailVisible, setEmailVisible] = useState(false);\r\n  const [emailChangeValue, setEmailChangeValue] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const sumbitEmail = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await axios.post(\"/forgotpassword\", {\r\n        email: emailChangeValue,\r\n      });\r\n      if (res) {\r\n        setMessage(\"Email sent!\");\r\n      }\r\n    } catch (err) {\r\n      setMessage(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/signin\", user);\r\n      localStorage.setItem(\"jwt\", data.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      setCurrentUser(data.user.username);\r\n      setShowLogin(false);\r\n    } catch (err) {\r\n      setFailure(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__content\">\r\n        <button\r\n          title=\"Close\"\r\n          onClick={() => setShowLogin(false)}\r\n          className=\"login__close\"\r\n        >\r\n          &times;\r\n        </button>\r\n        <div className=\"login__logo\">\r\n          <img src=\"./logo.png\" alt=\"logo\" />\r\n        </div>\r\n        <form className=\"login__formSumbit\" onSubmit={(e) => handleSumbit(e)}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button\r\n            disabled={!password || !email}\r\n            className=\"login__formSumbit--button\"\r\n            data-testid=\"loginButton\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        {failure && (\r\n          <span style={{ color: \"red\", textAlign: \"center\" }}>\r\n            You entered the wrong value or the user with this email doesn't\r\n            exist!\r\n          </span>\r\n        )}\r\n        <button\r\n          className=\"login__forgotPassBtn\"\r\n          onClick={() => setEmailVisible(true)}\r\n        >\r\n          Forgot the password?\r\n        </button>\r\n        {emailVisible && (\r\n          <>\r\n            <form className=\"login__forgotPassDiv\">\r\n              <input\r\n                type=\"email\"\r\n                value={emailChangeValue}\r\n                placeholder=\"Type your email\"\r\n                onChange={(e) => setEmailChangeValue(e.target.value)}\r\n              />\r\n              <button\r\n                className=\"login__forgotPassDiv--emailBtn\"\r\n                onClick={(e) => sumbitEmail(e)}\r\n              >\r\n                Send\r\n              </button>\r\n            </form>\r\n            {message && <span style={{ textAlign: \"center\" }}>{message}</span>}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  destination: [],\r\n  origin: [],\r\n  gasoline: \"\",\r\n  gasolineSummary: \"\",\r\n  gasolineO: \"\",\r\n  gasolineD: \"\",\r\n  roadInfo: \"\",\r\n  visitedCountries: \"\",\r\n  items1: \"\",\r\n  items2: \"\",\r\n  distance: \"\",\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"roadInformations\",\r\n  initialState,\r\n  reducers: {\r\n    setDestinationCor: (state, action) => {\r\n      state.destination = action.payload;\r\n    },\r\n    setOriginCor: (state, action) => {\r\n      state.origin = action.payload;\r\n    },\r\n    setAvrTwoPrices: (state, action) => {\r\n      state.gasolineSummary = action.payload;\r\n    },\r\n    setGasolineO: (state, action) => {\r\n      state.gasolineO = action.payload;\r\n    },\r\n    setGasolineD: (state, action) => {\r\n      state.gasolineD = action.payload;\r\n    },\r\n    setDistance: (state, action) => {\r\n      state.distance = action.payload;\r\n    },\r\n    setRoadInfos: (state, action) => {\r\n      state.roadInfo = action.payload;\r\n    },\r\n    setCountriesOnVecMap: (state, action) => {\r\n      state.visitedCountries = action.payload;\r\n    },\r\n    setItems1: (state, action) => {\r\n      state.items1 = action.payload;\r\n    },\r\n    setItems2: (state, action) => {\r\n      state.items2 = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setDestinationCor,\r\n  setOriginCor,\r\n  setGasolinePrice,\r\n  setAvrTwoPrices,\r\n  setRoadInfos,\r\n  setCountriesOnVecMap,\r\n  setItems1,\r\n  setItems2,\r\n  setDistance,\r\n  setGasolineD,\r\n  setGasolineO,\r\n} = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n","import \"react-svg-map/lib/index.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport World from \"@svg-maps/world\";\r\nimport { SVGMap } from \"react-svg-map\";\r\nimport \"react-svg-map/lib/index.css\";\r\nimport axios from \"axios\";\r\nimport \"./vectorMap.scss\";\r\nimport { setCountriesOnVecMap } from \"../redux/reduxIndex\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst VectorMapFn = () => {\r\n  const [stateName, setStateName] = useState([]);\r\n  const [countryCode, setCountryCode] = useState([]);\r\n  const [ID, setID] = useState(\"\");\r\n  const [clickedOne, setClickedOne] = useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isMoreThenOne, setIsMoreThenOne] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const res = await axios.get(`/mycountries`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n          },\r\n        });\r\n        setID(res.data.length === 0 ? \"\" : res.data[0]._id);\r\n\r\n        if (stateName) {\r\n          setCountryCode(res.data.length === 0 ? \"\" : res.data[0].countryCode);\r\n          setStateName(res.data.length === 0 ? \"\" : res.data[0].countriesList);\r\n        }\r\n        setIsloaded(true);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (countryCode) {\r\n      countryCode.forEach((el) => {\r\n        document.querySelector(`[id=${el}]`).style.fill = \"#a1d99b\";\r\n      });\r\n    }\r\n  }, [isloaded]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCountriesOnVecMap(stateName));\r\n  }, [stateName]);\r\n\r\n  const countriesList = {\r\n    countriesList: stateName,\r\n    countryCode: countryCode,\r\n  };\r\n\r\n  function onLocationClick(event) {\r\n    let countryName = event.target.getAttribute(\"name\");\r\n    let countryID = event.target.getAttribute(\"id\");\r\n\r\n    setClickedOne(countryName);\r\n    if (\r\n      stateName?.indexOf(countryName) === -1 &&\r\n      countryCode.indexOf(countryID) === -1\r\n    ) {\r\n      setStateName([...stateName, countryName]);\r\n      setCountryCode([...countryCode, countryID]);\r\n      event.target.style.fill = \"#a1d99b\";\r\n    } else {\r\n      let findEl =\r\n        stateName.length !== 0 && stateName.filter((el) => el !== countryName);\r\n      let findEl2 =\r\n        countryCode.length !== 0 &&\r\n        countryCode.filter((el) => el !== countryID);\r\n\r\n      setStateName([...findEl]);\r\n      setCountryCode([...findEl2]);\r\n      event.target.style.fill = \"#ddd\";\r\n    }\r\n    dispatch(setCountriesOnVecMap(stateName));\r\n    setIsMoreThenOne(true);\r\n  }\r\n\r\n  const sumbitData = () => {\r\n    fetch(\"/createcountries\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        ...countriesList,\r\n      }),\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n  };\r\n\r\n  const updateData = () => {\r\n    fetch(`/createcountries/${ID}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        ...countriesList,\r\n      }),\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"vectorMap\">\r\n      <SVGMap map={World} onLocationClick={onLocationClick} />\r\n\r\n      <div className=\"vectorMap__container\">\r\n        <h4>Select the countries you've been to!</h4>\r\n        <p>\r\n          Last one clicked:{\" \"}\r\n          {clickedOne ? clickedOne : stateName[stateName?.length - 1]}\r\n        </p>\r\n        {stateName.countriesList?.length !== 0 && !ID ? (\r\n          <button onClick={() => sumbitData()}>Save</button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {stateName.countriesList?.length !== 0 && ID && isMoreThenOne ? (\r\n          <button onClick={() => updateData()}>Update</button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VectorMapFn;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst VideoPlayer = (videoEl) => {\r\n  const [playing, setPlaying] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n  const [speed, setSpeed] = useState(1);\r\n  const [muted, setMuted] = useState(true);\r\n\r\n  let playerState = {\r\n    playing,\r\n    setPlaying,\r\n    progress,\r\n    setProgress,\r\n    setSpeed,\r\n    speed,\r\n    muted,\r\n  };\r\n\r\n  useEffect(() => {\r\n    playing ? videoEl.current.play() : videoEl.current.pause();\r\n  }, [playing, videoEl]);\r\n\r\n  const togglePlay = (e) => {\r\n    setPlaying(!playing);\r\n  };\r\n\r\n  const handleOnTimeUpdate = () => {\r\n    const progress =\r\n      (videoEl.current.currentTime / videoEl.current.duration) * 100;\r\n\r\n    setProgress(progress);\r\n  };\r\n\r\n  const handleVideoProgress = (e) => {\r\n    const manualChange = Number(e.target.value);\r\n    videoEl.current.currentTime =\r\n      (videoEl.current.duration / 100) * manualChange;\r\n\r\n    setProgress(manualChange);\r\n  };\r\n\r\n  const handleVideoSpeed = (e) => {\r\n    const speed = Number(e.target.value);\r\n    videoEl.current.playbackRate = speed;\r\n\r\n    setSpeed(speed);\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    setMuted(!muted);\r\n  };\r\n\r\n  useEffect(() => {\r\n    muted ? (videoEl.current.muted = true) : (videoEl.current.muted = false);\r\n  }, [muted, videoEl]);\r\n\r\n  return {\r\n    togglePlay,\r\n    handleOnTimeUpdate,\r\n    handleOnTimeUpdate,\r\n    handleVideoProgress,\r\n    handleVideoSpeed,\r\n    toggleMute,\r\n    playerState,\r\n  };\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import \"./settings.scss\";\r\nimport { useState } from \"react\";\r\n\r\nconst Settings = ({ setIsActive }) => {\r\n  const lstorage = window.localStorage;\r\n  const [isTrue1, setIsTrue1] = useState(false);\r\n  const [isTrue2, setIsTrue2] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordAgain, setNewPasswordAgain] = useState(\"\");\r\n  const [emailMessage, setEmailMessage] = useState(\"\");\r\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\r\n  const [currentUser, setCurrentUser] = useState(lstorage.getItem(\"user\"));\r\n\r\n  const deleteAccount = () => {\r\n    setIsTrue1(false);\r\n    setIsTrue2(false);\r\n    let askToDelete = window.confirm(\r\n      \"Are you sure you want to delete your account? \\n(You cannot undo this decision)\"\r\n    );\r\n    if (askToDelete) {\r\n      fetch(\"/deleteMe\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n      }).catch((err) => {\r\n        throw err;\r\n      });\r\n      lstorage.removeItem(\"user\");\r\n      lstorage.removeItem(\"jwt\");\r\n      setCurrentUser(null);\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  const updateUserInfo = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"/updateMe\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        username: username ? username : currentUser.username,\r\n        email: email ? email : currentUser.email,\r\n      }),\r\n    })\r\n      .then(() => {\r\n        const dataFromLS = JSON.parse(currentUser);\r\n        lstorage.setItem(\r\n          \"user\",\r\n          JSON.stringify({\r\n            _id: dataFromLS._id,\r\n            pic: dataFromLS.pic,\r\n            score: dataFromLS.score,\r\n            email: email && emailValidation() ? email : dataFromLS.email,\r\n            username: username ? username : dataFromLS.username,\r\n          })\r\n        );\r\n        if (username !== \"\") {\r\n          setIsActive(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  const changeUserPassword = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"/updateMyPassword\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        passwordCurrent: currentPassword ? currentPassword : \"\",\r\n        password: newPassword ? newPassword : \"\",\r\n        passwordConfirm: newPasswordAgain ? newPasswordAgain : \"\",\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setIsActive(false);\r\n        } else {\r\n          setPasswordMessage(\"One of the passwords is incorrect!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  const emailValidation = () => {\r\n    const regex =\r\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    if (!email || regex.test(email) === false) {\r\n      setEmailMessage(\"Email is not valid!\");\r\n    } else {\r\n      setIsActive(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings__content\">\r\n        <button\r\n          onClick={() => setIsActive(false)}\r\n          className=\"settings__close\"\r\n          title=\"Close\"\r\n        >\r\n          &times;\r\n        </button>\r\n        <img src=\"./logo.png\" alt=\"mapu logo\"/>\r\n        <div className=\"settings__content--divs\">\r\n          <div className=\"settings__content--buttons\">\r\n            <button\r\n              className=\"settings__content--button\"\r\n              onClick={() => {\r\n                setIsTrue1(true);\r\n                setIsTrue2(false);\r\n              }}\r\n            >\r\n              Change info\r\n            </button>\r\n            <button\r\n              className=\"settings__content--button\"\r\n              onClick={() => {\r\n                setIsTrue1(false);\r\n                setIsTrue2(true);\r\n              }}\r\n            >\r\n              Change password\r\n            </button>\r\n            <button\r\n              className=\"settings__content--button\"\r\n              onClick={() => deleteAccount()}\r\n            >\r\n              Delete account\r\n            </button>\r\n          </div>\r\n          <form\r\n            className=\"settings__content--form1\"\r\n            style={\r\n              isTrue1 && !isTrue2 ? { display: \"flex\" } : { display: \"none\" }\r\n            }\r\n          >\r\n            <label>Username</label>\r\n            <input onChange={(e) => setUsername(e.target.value)} type=\"text\" />\r\n            <label>Email</label>\r\n            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" />\r\n            {emailMessage}\r\n            <p>*You don't have to change both*</p>\r\n            <button onClick={(e) => updateUserInfo(e)}>Sumbit</button>\r\n          </form>\r\n          <form\r\n            className=\"settings__content--form2\"\r\n            style={\r\n              isTrue2 && !isTrue1 ? { display: \"flex\" } : { display: \"none\" }\r\n            }\r\n          >\r\n            <label>Current Password</label>\r\n            <input\r\n              onChange={(e) => setCurrentPassword(e.target.value)}\r\n              type=\"password\"\r\n            />\r\n            <label>New Password</label>\r\n            <input\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              type=\"password\"\r\n            />\r\n            <label>Type New Password Again</label>\r\n            <input\r\n              onChange={(e) => setNewPasswordAgain(e.target.value)}\r\n              type=\"password\"\r\n            />\r\n            {passwordMessage}\r\n            <button onClick={(e) => changeUserPassword(e)}>Sumbit</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"settings__footer\">\r\n          <p className=\"settings__footer--text\">\r\n            &#64;All Rights Reserved by\r\n            <a href=\"https://github.com/kacperwitkowski\" target=\"_blank\" rel=\"noreferrer\">\r\n              {\" \"}\r\n              Kacper Witkowski\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import \"./profile.scss\";\r\nimport {\r\n  AiOutlineClose,\r\n  AiOutlineCloudUpload,\r\n  AiFillSound,\r\n  AiOutlineSound,\r\n  AiOutlineSetting,\r\n} from \"react-icons/ai\";\r\nimport { FaPause, FaPlay } from \"react-icons/fa\";\r\nimport VectorMapFn from \"../vectorMap/vectormap\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport VideoPlayer from \"../videoPlayer/videoPlayer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Settings from \"../settings/settings\";\r\n\r\nconst Profile = ({ setIsActive }) => {\r\n  const [image, setImage] = useState(\"\");\r\n  const [settingsVisible, setSettingsVisible] = useState(false);\r\n  const [countriesListVisible, setCountriesListVisible] = useState(false);\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n  const videoEl = useRef(null);\r\n  const {\r\n    playerState,\r\n    togglePlay,\r\n    handleOnTimeUpdate,\r\n    handleVideoProgress,\r\n    handleVideoSpeed,\r\n    toggleMute,\r\n  } = VideoPlayer(videoEl);\r\n\r\n  const { visitedCountries } = useSelector((state) => state.directions);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"jwt\");\r\n    setUser(null);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const photoRender = () => {\r\n    if (user.score === 101 || !user) return \"./qm.png\";\r\n    if (user.score >= 0 && user.score < 40) return \"./sandybrown.png\";\r\n    if (user.score >= 40 && user.score < 90) return \"./silver.png\";\r\n    if (user.score >= 90 && user.score <= 100) return \"./gold.png\";\r\n    else return \"./qm.png\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const data = new FormData();\r\n      data.append(\"file\", image);\r\n      data.append(\"upload_preset\", \"mapU-app\");\r\n      data.append(\"cloud_name\", \"dx7vsnkjj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dx7vsnkjj/image/upload\", {\r\n        method: \"POST\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({ ...user, pic: result.url })\r\n          );\r\n\r\n          setUser({ ...user, pic: result.url });\r\n\r\n          fetch(\"/updatepic\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n            },\r\n            body: JSON.stringify({\r\n              pic: result.url,\r\n            }),\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    }\r\n  }, [image]);\r\n\r\n  const updatePhoto = (file) => {\r\n    setImage(file);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"profile\"\r\n      style={settingsVisible ? { minHeight: \"auto\", maxHeight: \"100vh\" } : {}}\r\n    >\r\n      <button\r\n        title=\"Close\"\r\n        className=\"profile__close\"\r\n        onClick={() => setIsActive(false)}\r\n      >\r\n        <AiOutlineClose />\r\n      </button>\r\n      <button className=\"profile__settings\">\r\n        <AiOutlineSetting\r\n          onClick={() => {\r\n            setSettingsVisible(true);\r\n          }}\r\n          title=\"Settings\"\r\n        />\r\n      </button>\r\n      <button onClick={handleLogout} className=\"profile__logout\" title=\"Logout\">\r\n        <span>Logout</span>\r\n      </button>\r\n      <div className=\"profile__userPage\">\r\n        <div className=\"profile__userImageDiv\">\r\n          <p>{user?.username}</p>\r\n          <img\r\n            className=\"profile__userImageDiv--img\"\r\n            src={user?.pic}\r\n            alt=\"user pic\"\r\n          />\r\n          <label className=\"custom-file-upload\">\r\n            <AiOutlineCloudUpload />\r\n            <i>Update photo</i>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => updatePhoto(e.target.files[0])}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"video\">\r\n          <video\r\n            className=\"video__content\"\r\n            src=\"./starwarstheme.mp4\"\r\n            ref={videoEl}\r\n            onTimeUpdate={handleOnTimeUpdate}\r\n          />\r\n          <div className=\"video__controls\">\r\n            <div className=\"video__controls--playToggle\">\r\n              <button onClick={togglePlay}>\r\n                {!playerState.playing ? (\r\n                  <FaPlay color=\"white\" />\r\n                ) : (\r\n                  <FaPause color=\"white\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={playerState.progress}\r\n              onChange={(e) => handleVideoProgress(e)}\r\n            />\r\n            <select\r\n              className=\"video__controls--velocity\"\r\n              value={playerState.speed}\r\n              onChange={(e) => handleVideoSpeed(e)}\r\n            >\r\n              <option value=\"0.50\">0.50x</option>\r\n              <option value=\"1\">1x</option>\r\n              <option value=\"1.25\">1.25x</option>\r\n              <option value=\"2\">2x</option>\r\n            </select>\r\n            <button className=\"video__controls--muteBtn\" onClick={toggleMute}>\r\n              {!playerState.muted ? <AiOutlineSound /> : <AiFillSound />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"profile__stats\"\r\n          style={{ color: photoRender().slice(0, -4).slice(2) }}\r\n        >\r\n          <p>Medal/stats</p>\r\n          <div className=\"profile__statsDiv\">\r\n            <div\r\n              className=\"profile__statsDiv--medal\"\r\n              title=\"Medal from quiz\"\r\n              style={{ borderColor: photoRender().slice(0, -4).slice(2) }}\r\n            >\r\n              <img\r\n                src={photoRender()}\r\n                alt=\"medal\"\r\n                className=\"profile__statsDiv--img\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <p>{visitedCountries.length}/200</p>\r\n              <p>{((visitedCountries.length / 200) * 100).toFixed(1)}%</p>\r\n            </div>\r\n          </div>\r\n          {visitedCountries.length !== 0 && (\r\n            <button\r\n              style={{\r\n                color: photoRender().slice(0, -4).slice(2),\r\n                borderColor: photoRender().slice(0, -4).slice(2),\r\n              }}\r\n              onClick={() => setCountriesListVisible(true)}\r\n            >\r\n              See list of visited countries\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {countriesListVisible && (\r\n        <div className=\"profile__countries\">\r\n          <div className=\"profile__countries--content\">\r\n            <button\r\n              onClick={() => setCountriesListVisible(false)}\r\n              className=\"profile__countries--close\"\r\n              title=\"Close\"\r\n            >\r\n              &times;\r\n            </button>\r\n            <ul>\r\n              {visitedCountries.map((el, i) => (\r\n                <li key={i}>{el}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <VectorMapFn />\r\n      {settingsVisible && (\r\n        <Settings isActive={settingsVisible} setIsActive={setSettingsVisible} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/drive.986c0af0.gif\";","import \"./info.scss\";\r\nimport driveGif from \"./drive.gif\";\r\n\r\nconst Info = ({ setIsActive }) => {\r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"info__content\">\r\n        <button\r\n          onClick={() => setIsActive(false)}\r\n          className=\"info__close\"\r\n          title=\"Close\"\r\n        >\r\n          &times;\r\n        </button>\r\n        <h3>MapU</h3>\r\n        <p className=\"info__content--text\">\r\n          Did you ever wonder how many kilometers or miles you drove without\r\n          knowing how much your road have cost? Now MapU comes with the rescue!\r\n          On this site you can approximately calculate every road, beetwen any\r\n          countries you want. The gasoline prices for each coutry are updated\r\n          regurarly (last update was: 14.03.2022 ) Additionally to that you can\r\n          get all important information about countries where you started and\r\n          finished your journey. The profile site has also a feature that allows\r\n          users to save any country they have ever been to on a map. In order to\r\n          use all of the feautres MapU provides, you have to be logged in!\r\n        </p>\r\n        <div className=\"info__content--imgDiv\">\r\n          <img src={driveGif} />\r\n        </div>\r\n        <div>\r\n          <p>\r\n            &#64;All Rights Reserved by\r\n            <a href=\"https://github.com/kacperwitkowski\" target=\"_blank\">\r\n              {\" \"}\r\n              Kacper Witkowski\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Timer = ({ setStop, qNumber }) => {\r\n  const [timer, setTimer] = useState(20);\r\n\r\n  useEffect(() => {\r\n    if (timer === 0) return setStop(true);\r\n    const interval = setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [setStop, timer]);\r\n\r\n  useEffect(() => {\r\n    setTimer(20);\r\n  }, [qNumber]);\r\n\r\n  return timer;\r\n};\r\n\r\nexport default Timer;\r\n","import \"./quiz.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport Timer from \"./timer\";\r\nimport Scroll from \"../scroll/scroll\";\r\n\r\nconst Quiz = ({ setIsActive }) => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [showIntro, setShowIntro] = useState(true);\r\n  const [score, setScore] = useState(0);\r\n  const [questions, setQuestions] = useState(\r\n    JSON.parse(localStorage.getItem(\"questions\"))\r\n  );\r\n  const [incQuestion, setIncQuestion] = useState(0);\r\n  const [currentQNumber, setCurrentQNumber] = useState(\r\n    Math.floor(Math.random() * questions.length)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showScore) {\r\n      let finalScore = (score / 10) * 100;\r\n      fetch(\"/updatescore\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          score: finalScore,\r\n        }),\r\n      })\r\n        .then(() => {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({ ...user, score: finalScore })\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    }\r\n  }, [showScore]);\r\n\r\n  useEffect(() => {\r\n    questions.splice(currentQNumber, 1);\r\n    setCurrentQNumber(Math.floor(Math.random() * questions.length));\r\n    setIncQuestion(incQuestion + 1);\r\n  }, []);\r\n\r\n  const handleResetButton = () => {\r\n    setQuestions(JSON.parse(localStorage.getItem(\"questions\")));\r\n    setIncQuestion(1);\r\n    setCurrentQNumber(Math.floor(Math.random() * questions.length));\r\n    setShowScore(false);\r\n    setScore(0);\r\n  };\r\n\r\n  const nextQuestion = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    setIncQuestion(incQuestion + 1);\r\n    questions.splice(currentQNumber, 1);\r\n\r\n    setCurrentQNumber(Math.floor(Math.random() * questions.length));\r\n\r\n    if (incQuestion === 10) {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  const closePage = () => {\r\n    if (!showScore && !showIntro) {\r\n      let askToClose = window.confirm(\r\n        \"You want to close that page? Result will be not saved until you finish the game!\"\r\n      );\r\n\r\n      if (askToClose) {\r\n        setIsActive(false);\r\n        handleResetButton();\r\n      }\r\n    } else {\r\n      setIsActive(false);\r\n      handleResetButton();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"quiz\"\r\n      style={\r\n        !showIntro ? { justifyContent: \"center\" } : { justifyContent: \"unset\" }\r\n      }\r\n    >\r\n      <button\r\n        className=\"quiz__close\"\r\n        title=\"Close\"\r\n        onClick={() => {\r\n          closePage();\r\n        }}\r\n      >\r\n        <AiOutlineClose />\r\n      </button>\r\n      {showIntro ? (\r\n        <div className=\"quiz__content--introduction\">\r\n          <h3>Welcome to the Geography Quiz!</h3>\r\n          <p>\r\n            In this quiz you may check your geography knowledge answering on 10\r\n            random questions! In each game questions are drawn randomly, but\r\n            there is no chance you will have the same questions in one game.\r\n            Questions are sorted from places through flags, capitals or even\r\n            population numbers! Ofcourse you are not playing for nothinf, aside\r\n            testing your knowledge you can get medal which will be assigned to\r\n            your account!\r\n          </p>\r\n          <p>Good Luck!</p>\r\n          <div className=\"quiz__content--medals\">\r\n            <div>\r\n              <img src=\"./sandybrown.png\" alt=\"brown medal\" />\r\n              <p>Bronze medal: 1-30%</p>\r\n            </div>\r\n            <div>\r\n              <img src=\"./silver.png\" alt=\"silver medal\" />\r\n              <p>Silver medal: 31-80%</p>\r\n            </div>\r\n            <div>\r\n              <img src=\"./gold.png\" alt=\"gold medal\" />\r\n              <p>Gold medal: 81-100%</p>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            PS. If you're interested in playing in Movie Quiz with crazy\r\n            helpers,sounds and even more features, check out my{\" \"}\r\n            <a target=\"_blank\" href=\"https://movie-quiz-app.herokuapp.com/\" rel=\"noreferrer\">\r\n              Movie Quiz!\r\n            </a>\r\n          </p>\r\n          <button\r\n            className=\"settings__content--button\"\r\n            onClick={() => setShowIntro(false)}\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Start the game\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {!showIntro && !showScore && (\r\n        <div className=\"quiz__content\">\r\n          <h2>Geography Quiz</h2>\r\n          <div className=\"quiz__content--number\">\r\n            <h4>Question {incQuestion}/10</h4>\r\n            <p>\r\n              <Timer setStop={setShowScore} qNumber={incQuestion} />\r\n            </p>\r\n          </div>\r\n          <div className=\"quiz__game\">\r\n            <div className=\"quiz__game--question\">\r\n              <p>{questions[currentQNumber].question}</p>\r\n            </div>\r\n            <div className=\"quiz__game--buttons\">\r\n              {questions[currentQNumber].answers.map((ans, i) => (\r\n                <button\r\n                  className=\"quiz__game--singleButton\"\r\n                  onClick={() => nextQuestion(ans.isCorrect)}\r\n                  key={i}\r\n                >\r\n                  {ans.answerText}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showScore && (\r\n        <div className=\"quiz__game--endInfo\">\r\n          <p>You reached the end of the game, your score is {score}/10</p>\r\n          <button\r\n            style={{ color: \"white\" }}\r\n            className=\"settings__content--button\"\r\n            onClick={() => handleResetButton()}\r\n          >\r\n            Play Again\r\n          </button>\r\n        </div>\r\n      )}\r\n      {showIntro && <Scroll />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../roadInformations/roadInformations.scss\";\r\n\r\nconst CountriesInfo = ({ isActive, setIsActive }) => {\r\n  const { items1, items2 } = useSelector((state) => state.directions);\r\n\r\n  const roadDetails = (items) => {\r\n    return (\r\n      <>\r\n        <div className=\"roadInfo__content--div\">\r\n          <div className=\"roadInfo__content--details\">\r\n          <img src={items.img} alt=\"country img\" />\r\n            <h3>{items.name}</h3>\r\n            <p>Capitol: {items.capitol}</p>\r\n            <p>Gas price per 1L: {items.gasolinePrice}$</p>\r\n            <p>Population: {items.population}</p>\r\n            <h4>Top attractions to see:</h4>\r\n            <div className=\"roadInfo__content--attr\">\r\n              {items.attractions?.map((att, i) => (\r\n                <a\r\n                  key={i}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  href={`https://www.google.com/search?tbm=isch&q=${att} ${items.name}`}\r\n                >\r\n                  {i + 1}) {att}\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {items1.isoAlpha3 === items2.isoAlpha3 ? (\r\n        <div\r\n          className=\"roadInfo\"\r\n          style={isActive ? { display: \"flex\" } : { display: \"none\" }}\r\n        >\r\n          <div className=\"roadInfo__content roadInfo__content--single\">\r\n            <button\r\n              onClick={() => setIsActive(false)}\r\n              className=\"roadInfo__close\"\r\n            >\r\n              &times;\r\n            </button>\r\n            {roadDetails(items1)}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"roadInfo\"\r\n          style={isActive ? { display: \"flex\" } : { display: \"none\" }}\r\n        >\r\n          <div className=\"roadInfo__content\">\r\n            <button\r\n              onClick={() => setIsActive(false)}\r\n              className=\"roadInfo__close\"\r\n            >\r\n              &times;\r\n            </button>\r\n            {roadDetails(items1)}\r\n            {roadDetails(items2)}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountriesInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./roadInformations.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CountriesInfo from \"../countriesInfo/countriesInfo\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\n\r\nconst RoadInformations = ({ currentUser }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isGasolineVisible, setIsGasolineVisible] = useState(false);\r\n  const [showSavePopup, setShowSavePopup] = useState(false);\r\n  const [isPopupVisible, setPopupVisible] = useState(true);\r\n  const [gasolineData, setGasolineData] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [liters, setLiters] = useState(\"\");\r\n  const [calcFullPrice, setCalcFullPrice] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [roads, setRoads] = useState([]);\r\n  const [miles, setMiles] = useState(false);\r\n  const [gasoline, setGasoline] = useState(\"\");\r\n  const [gasolineSummary, setGasolineSummary] = useState(\"\");\r\n  const {\r\n    destination,\r\n    origin,\r\n    distance,\r\n    gasolineD,\r\n    gasolineO,\r\n    roadInfo,\r\n    items1,\r\n    items2,\r\n  } = useSelector((state) => state.directions);\r\n  const [img1, setImg1] = useState(items1.img);\r\n  const [img2, setImg2] = useState(items2.img);\r\n  const current = new Date();\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    if (!isCancelled) {\r\n      let gasolinePriceSummary = (gasolineD + gasolineO) / 2;\r\n      let gasolineFullPrice = (\r\n        ((distance / 100) * 7.7 * gasolinePriceSummary) /\r\n        1000\r\n      ).toFixed(1);\r\n\r\n      setGasoline(gasolineFullPrice);\r\n      setGasolineSummary(gasolinePriceSummary);\r\n    }\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, [distance]);\r\n\r\n  const calcMiles = (gasolineData) => {\r\n    return gasolineData * 0.621371192;\r\n  };\r\n\r\n  const saveInpValue = (e) => {\r\n    setGasolineData(e.target.value);\r\n  };\r\n\r\n  const saveFullPriceInput = (e) => {\r\n    setLiters(e.target.value);\r\n\r\n    const fullPriceOfGas = miles\r\n      ? ((calcMiles(gasoline) / 7.7) * e.target.value).toFixed(1)\r\n      : ((gasoline / 7.7) * e.target.value).toFixed(1);\r\n    setCalcFullPrice(fullPriceOfGas);\r\n  };\r\n\r\n  const milesConverter = (type) => {\r\n    if (type === \"miles\") {\r\n      setMiles(true);\r\n    } else {\r\n      setMiles(false);\r\n    }\r\n  };\r\n\r\n  const sumbitData = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newRoad = {\r\n      user: currentUser,\r\n      title,\r\n      countries:\r\n        items2.name === items1.name\r\n          ? [items1.name]\r\n          : [items1.name, items2.name],\r\n      img1: img1,\r\n      img2: img2,\r\n      gasoline: liters ? liters : 7.7,\r\n      gasolinePrice: gasolineSummary ? gasolineSummary : \"\",\r\n      origin: [...origin],\r\n      destination: [...destination],\r\n      kms: roadInfo.kms,\r\n      duration: roadInfo.duration,\r\n      fullPrice:\r\n        calcFullPrice && miles\r\n          ? (calcFullPrice * 1.609344).toFixed(1)\r\n          : liters\r\n          ? calcFullPrice\r\n          : gasoline,\r\n    };\r\n\r\n    fetch(\"/createroad\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        ...newRoad,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setRoads([...roads, res.road]);\r\n          setStatus(\"\");\r\n          setShowSavePopup(false);\r\n        } else {\r\n          setStatus(res.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImg1(items1.img);\r\n    setImg2(items2.img);\r\n  }, [items1, items2]);\r\n\r\n  return (\r\n    <>\r\n      {!isPopupVisible ? (\r\n        <button\r\n          title=\"Close\"\r\n          className=\"roadInfo--hide\"\r\n          onClick={() => setPopupVisible(true)}\r\n        >\r\n          Roll down\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {items1.gasolinePrice && items2.gasolinePrice && roadInfo.kms ? (\r\n        <div\r\n          className=\"road\"\r\n          style={isPopupVisible ? { display: \"flex\" } : { display: \"none\" }}\r\n        >\r\n          <div\r\n            className=\"road__content\"\r\n            style={\r\n              isPopupVisible && !isGasolineVisible\r\n                ? { display: \"flex\" }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            <select\r\n              className=\"road__content--select\"\r\n              onChange={(e) => milesConverter(e.target.value)}\r\n            >\r\n              <option defaultValue value=\"kms\">\r\n                Km\r\n              </option>\r\n              <option value=\"miles\">Mi</option>\r\n            </select>\r\n            <button\r\n              onClick={() => setPopupVisible(false)}\r\n              className=\"road__content--closePopup\"\r\n            >\r\n              &times;\r\n            </button>\r\n            <p>Based on 7.7L/100{miles ? \"mi\" : \"km\"}</p>\r\n            <p>{miles ? calcMiles(gasoline).toFixed(1) : gasoline}$</p>\r\n            <button\r\n              onClick={() => setIsGasolineVisible(true)}\r\n              className=\"road__content--button\"\r\n            >\r\n              Check your own gas\r\n            </button>\r\n            <button\r\n              className=\"road__content--buttons\"\r\n              onClick={() => setIsVisible(true)}\r\n            >\r\n              See all the details about country(ies)\r\n            </button>\r\n            <button\r\n              className=\"road__content--buttons\"\r\n              onClick={() => {\r\n                setLiters(false);\r\n                setShowSavePopup(true);\r\n              }}\r\n            >\r\n              Save the road\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"road__content\"\r\n            style={\r\n              isGasolineVisible ? { display: \"flex\" } : { display: \"none\" }\r\n            }\r\n          >\r\n            <BsArrowLeftShort\r\n              onClick={() => setIsGasolineVisible(false)}\r\n              className=\"road__content--closePopup\"\r\n            />\r\n            <h3>Calculate with our liters</h3>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              maxLength=\"3\"\r\n              onChange={saveInpValue}\r\n              placeholder={miles ? \"Liters per miles\" : \"Liters per kms\"}\r\n            />\r\n            <p>\r\n              {miles\r\n                ? ((calcMiles(gasoline) / 7.7) * gasolineData).toFixed(1)\r\n                : ((gasoline / 7.7) * gasolineData).toFixed(1)}\r\n              $\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div\r\n        style={showSavePopup ? { display: \"flex\" } : { display: \"none\" }}\r\n        className=\"roadInfo\"\r\n      >\r\n        <div className=\"roadInfo__form\">\r\n          <button\r\n            onClick={() => {\r\n              setLiters(false);\r\n              setShowSavePopup(false);\r\n            }}\r\n            className=\"roadInfo__close\"\r\n          >\r\n            &times;\r\n          </button>\r\n          <div className=\"roadInfo__imgDiv\">\r\n            <img\r\n              className=\"roadInfo__imgDiv--img\"\r\n              src={items1.img}\r\n              alt=\"flag\"\r\n            />\r\n            <img\r\n              className=\"roadInfo__imgDiv--img\"\r\n              src={items2.img ? items2.img : \"\"}\r\n              alt=\"flag\"\r\n            />\r\n          </div>\r\n          <div className=\"roadInfo__form--details\">\r\n            <p>\r\n              {items2.name === items1.name\r\n                ? `${items1.name}`\r\n                : `${items1.name} - ${items2.name}`}\r\n            </p>\r\n            <p>\r\n              Date: {current.getDate()}/{current.getMonth() + 1}/\r\n              {current.getFullYear()}\r\n            </p>\r\n            <label>Title</label>\r\n\r\n            <input\r\n              required\r\n              placeholder=\"Enter a title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              maxLength={25}\r\n            />\r\n\r\n            <label>Liters</label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              max=\"99\"\r\n              placeholder={`Default 7.7L/${miles ? \"mi\" : \"km\"}`}\r\n              onChange={saveFullPriceInput}\r\n            />\r\n            <p style={{ fontSize: \"16px\" }}>\r\n              (Average fuel consumption (1L/\r\n              {items1 && items2\r\n                ? `${(\r\n                    (items1.gasolinePrice + items2.gasolinePrice) /\r\n                    2\r\n                  ).toFixed(1)}$`\r\n                : `${items1.gasolinePrice}$`}\r\n              ))\r\n            </p>\r\n            <p>\r\n              {liters\r\n                ? calcFullPrice\r\n                : miles\r\n                ? calcMiles(gasoline).toFixed(1)\r\n                : gasoline}\r\n              $\r\n            </p>\r\n            <button\r\n              className=\"roadInfo__form--button\"\r\n              onClick={(e) => sumbitData(e)}\r\n              type=\"submit\"\r\n            >\r\n              Save the Road\r\n            </button>\r\n            {status === 422 ? (\r\n              <span style={{ color: \"red\" }}>\r\n                You're passing the wrong value!\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {status === 401 ? (\r\n              <span style={{ color: \"red\" }}>You're not logged in!</span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CountriesInfo setIsActive={setIsVisible} isActive={isVisible} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoadInformations;\r\n","import \"./App.scss\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport MapboxDirections from \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions\";\r\nimport { iso1A3Code } from \"@ideditor/country-coder\";\r\nimport \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport Register from \"./components/register/register\";\r\nimport Login from \"./components/login/login\";\r\nimport Profile from \"./components/profile/profile\";\r\nimport axios from \"axios\";\r\nimport Info from \"./components/info/info\";\r\nimport Quiz from \"./components/quiz/quiz\";\r\nimport RoadInformations from \"./components/roadInformations/roadInformations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setDestinationCor,\r\n  setOriginCor,\r\n  setGasolineD,\r\n  setGasolineO,\r\n  setRoadInfos,\r\n  setItems1,\r\n  setItems2,\r\n  setDistance,\r\n} from \"./components/redux/reduxIndex\";\r\n\r\nconst styles = {\r\n  width: \"100vw\",\r\n  height: \"100vh\",\r\n  maxHeight: \"100vh\",\r\n  position: \"absolute\",\r\n  zIndex: \"-1\",\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst MapboxGLMap = () => {\r\n  const [map, setMap] = useState(null);\r\n  let questions = require(\"./components/quiz/quiz.json\");\r\n  const [dashboardVisible, setDashboardVisible] = useState(false);\r\n  const [profileVisible, setProfileVisible] = useState(false);\r\n  const [quizVisible, setQuizVisible] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(localStorage.getItem(\"user\"));\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const mapContainer = useRef(null);\r\n  const dispatch = useDispatch();\r\n  localStorage.setItem(\"questions\", JSON.stringify(questions));\r\n  mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\r\n\r\n  useEffect(() => {\r\n    const initializeMap = async ({ setMap, mapContainer }) => {\r\n      const getGasolineData = await axios.get(\r\n        \"https://faithful-tick-top-coat.cyclic.app/countries\"\r\n      );\r\n\r\n      const map = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: \"mapbox://styles/mapbox/streets-v11?optimize=true\",\r\n        center: [-0.118092, 51.509865],\r\n        zoom: 11,\r\n        noWrap: true\r\n      });\r\n\r\n      const directions = new MapboxDirections({\r\n        accessToken: mapboxgl.accessToken,\r\n        unit: \"metric\",\r\n        profile: \"mapbox/driving\",\r\n      });\r\n\r\n      directions.on(\"origin\", function (e) {\r\n        try {\r\n          const originCoords = e.feature.geometry.coordinates;\r\n          const [longitude, latitude] = [...originCoords];\r\n          dispatch(setOriginCor([longitude, latitude]));\r\n\r\n          const cordsIso3 = iso1A3Code([longitude, latitude]);\r\n          const items2 = getGasolineData.data.filter(\r\n            (item) => item.isoAlpha3 === cordsIso3\r\n          );\r\n          const respond = Object.assign(...items2);\r\n\r\n          dispatch(setItems1(respond));\r\n          dispatch(setGasolineO(respond.gasolinePrice));\r\n        } catch (err) {\r\n          throw err;\r\n        }\r\n      });\r\n      directions.on(\"destination\", function (e) {\r\n        try {\r\n          const originCoords = e.feature.geometry.coordinates;\r\n          const [longitude2, latitude2] = [...originCoords];\r\n          dispatch(setDestinationCor([longitude2, latitude2]));\r\n          const cordsIso3 = iso1A3Code([longitude2, latitude2]);\r\n\r\n          const items2 = getGasolineData.data.filter(\r\n            (item) => item.isoAlpha3 === cordsIso3\r\n          );\r\n\r\n          const respond = Object.assign(...items2);\r\n          dispatch(setItems2(respond));\r\n          dispatch(setGasolineD(respond.gasolinePrice));\r\n        } catch (err) {\r\n          throw err;\r\n        }\r\n      });\r\n\r\n      directions.on(\"route\", (e) => {\r\n        if (e.route.length === 0) {\r\n          dispatch(setItems1(\"\"));\r\n          dispatch(setItems2(\"\"));\r\n        } else {\r\n          const route = {\r\n            kms: e.route[0].distance,\r\n            duration: e.route[0].duration,\r\n          };\r\n          dispatch(setRoadInfos(route));\r\n          const objAssign = Object.assign(...e.route);\r\n          dispatch(setDistance(objAssign.distance));\r\n        }\r\n      });\r\n\r\n      map.on(\"load\", () => {\r\n        setMap(map);\r\n        map.resize();\r\n      });\r\n      const nav = new mapboxgl.NavigationControl();\r\n      map.addControl(nav);\r\n      map.addControl(directions, \"top-left\");\r\n    };\r\n\r\n    if (!map) initializeMap({ setMap, mapContainer });\r\n  }, [map]);\r\n\r\n  return (\r\n    <>\r\n      <div ref={(el) => (mapContainer.current = el)} style={styles} />\r\n      <RoadInformations currentUser={currentUser} />\r\n      {currentUser ? (\r\n        <>\r\n          <div className=\"menu\">\r\n            <button\r\n              className=\"menu__button\"\r\n              onClick={() => setProfileVisible(true)}\r\n            >\r\n              Profile\r\n            </button>\r\n            <button\r\n              className=\"menu__button\"\r\n              onClick={() => setQuizVisible(true)}\r\n            >\r\n              Quiz\r\n            </button>\r\n            <button\r\n              className=\"menu__button\"\r\n              onClick={() => setDashboardVisible(true)}\r\n            >\r\n              Dashboard\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"menu\">\r\n          <button\r\n            className=\"menu__button\"\r\n            onClick={() => setShowRegister(true)}\r\n          >\r\n            <span className=\"front\">Register</span>\r\n          </button>\r\n          <button className=\"menu__button\" onClick={() => setShowLogin(true)}>\r\n            <span className=\"front\">Log in</span>\r\n          </button>\r\n          <button className=\"menu__button\" onClick={() => setShowInfo(true)}>\r\n            <span className=\"front\">Info</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n      {showRegister && <Register setShowRegister={setShowRegister} />}\r\n      {showLogin && (\r\n        <Login setShowLogin={setShowLogin} setCurrentUser={setCurrentUser} />\r\n      )}\r\n      {dashboardVisible && (\r\n        <Dashboard\r\n          isActive={dashboardVisible}\r\n          setIsActive={setDashboardVisible}\r\n        />\r\n      )}\r\n      {profileVisible && (\r\n        <Profile isActive={profileVisible} setIsActive={setProfileVisible} />\r\n      )}\r\n      {showInfo && <Info setIsActive={setShowInfo} />}\r\n      {quizVisible && (\r\n        <Quiz isActive={quizVisible} setIsActive={setQuizVisible} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapboxGLMap;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport indexReducer from \"./reduxIndex\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    directions: indexReducer,\r\n  },\r\n});\r\n","export default __webpack_public_path__ + \"static/media/logo.f85fa110.png\";","import { useState } from \"react\";\r\nimport \"./resetPassword.scss\";\r\nimport axios from \"axios\";\r\nimport logo from \"./logo.png\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ResetPassword = () => {\r\n  let navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const sumbitData = async (e) => {\r\n    e.preventDefault();\r\n    const pathname = window.location.pathname;\r\n    const token = pathname.slice(15);\r\n\r\n    const userPassword = {\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.patch(`/resetpassword/${token}`, userPassword);\r\n      if (res.status === 200) {\r\n        navigate(\"/\");\r\n      }\r\n    } catch (err) {\r\n      setStatus(err.response.status);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetPassword\">\r\n      <ul class=\"circles\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n      <div className=\"resetPassword__menu\">\r\n        <img src={logo} alt=\"mapu logo\"/>\r\n        <h1>Reset your password</h1>\r\n      </div>\r\n      <form className=\"resetPassword__form\">\r\n        <FaLock />\r\n        <h4>Enter your new password here</h4>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Type new password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Type new password again\"\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          value={passwordConfirm}\r\n        />\r\n        {status === 400 ? (\r\n          <span style={{ color: \"red\" }}>Token is invalid or has expired</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {status === 500 ? (\r\n          <span style={{ color: \"red\" }}>One of the passwords is wrong!</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button onClick={(e) => sumbitData(e)}>Sumbit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport MapboxGLMap from \"./App\";\r\nimport { store } from \"./components/redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport ResetPassword from \"./components/resetPassword/resetPassword\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <MapboxGLMap />\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/resetpassword/:token\" element={<ResetPassword />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}